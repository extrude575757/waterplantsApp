{"version":3,"sources":["Auth/axiosWithAuth.js","Auth/SignUp.js","contextAPI/Context.js","components/Login.js","Heading.js","App.js","serviceWorker.js","index.js"],"names":["axiosWithAuth","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","formSchema","yup","shape","username","required","email","password","terms","oneOf","SignUp","props","useState","ButtonDisabled","setButtonDisabled","credentials","setCredentials","errorState","setErrorState","useEffect","isValid","then","valid","handleChange","e","persist","event","value","target","type","checked","name","validate","catch","err","errors","signUp","preventDefault","console","log","post","res","setItem","data","className","onSubmit","htmlFor","placeholder","onChange","length","disabled","onClick","to","StoreContext","React","createContext","Login","useContext","userInfo","setUserInfo","form","setForm","handleChanges","response","error","Heading","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8RAEaA,EAAgB,WAC3B,IAAMC,EAAQC,aAAaC,QAAQ,SAEnC,OAAOC,IAAMC,OAAO,CAClBC,QAAS,+CACTC,QAAS,CACPC,cAAeP,M,QCEfQ,EAAaC,MAAaC,MAAM,CACpCC,SAAUF,MAAaG,WACvBC,MAAOJ,MAAaI,QAAQD,WAC5BE,SAAUL,MAAaG,WACvBG,MAAON,MAAcO,MAAM,EAAC,GAAO,kCAmItBC,EA7HA,SAACC,GAAW,IAAD,EAEiBC,qBAFjB,mBAEnBC,EAFmB,KAEJC,EAFI,OAIYF,mBAAS,CAC7CR,SAAU,GACVG,SAAU,GACVD,MAAM,KAPkB,mBAInBS,EAJmB,KAINC,EAJM,OAYUJ,mBAAS,CAC3CR,SAAU,GACVE,MAAO,GACPC,SAAU,GACVC,MAAO,KAhBiB,mBAYnBS,EAZmB,KAYPC,EAZO,KAyCxBC,qBAAU,WACRlB,EAAWmB,QAAQL,GAAaM,MAAK,SAAAC,GACnCR,GAAmBQ,QAEpB,CAACP,IAEJ,IAAMQ,EAAe,SAAAC,GACnBA,EAAEC,UA7BW,SAAAC,GACb,IAAIC,EACoB,aAAtBD,EAAME,OAAOC,KAAsBH,EAAME,OAAOE,QAAUJ,EAAME,OAAOD,MACzEzB,IACSD,EAAYyB,EAAME,OAAOG,MAC/BC,SAASL,GACTN,MAAK,SAAAC,GACJJ,EAAc,2BACTD,GADQ,kBAEVS,EAAME,OAAOG,KAAO,SAGxBE,OAAM,SAAAC,GACLhB,EAAc,2BACTD,GADQ,kBAEVS,EAAME,OAAOG,KAAOG,EAAIC,OAAO,SAetCH,CAASR,GACTR,EAAe,2BACVD,GADS,kBAEXS,EAAEI,OAAOG,KAAOP,EAAEI,OAAOD,UAGxBS,EAAS,SAAAZ,GACbA,EAAEa,iBACFC,QAAQC,IAAIxB,GACZvB,IACGgD,KAAK,iBAAkBzB,GACvBM,MAAK,SAAAoB,GACJ/C,aAAagD,QAAQ,QAASD,EAAIE,KAAKlD,OAEvC6C,QAAQC,IAAIE,EAAIE,SAEjBV,OAAM,SAAAC,GAAG,OAAII,QAAQC,IAAIL,OAE9B,OACE,sDAMI,yBAAKU,UAAU,OACb,wCACA,0DACI,0BAAMA,UAAU,MAAMC,SAAUT,GAC9B,2BAAOU,QAAQ,YAAf,aAGF,2BACEjB,KAAK,OACLE,KAAK,WACLgB,YAAY,OACZpB,MAAOZ,EAAYX,SACnB4C,SAAUzB,IAEZ,2BAAOuB,QAAQ,YAAf,SAEK7B,EAAWX,MAAM2C,OAAS,EACnC,uBAAGL,UAAU,kBAAkB3B,EAAWX,OACxC,MAEE,2BACEuB,KAAK,QACLE,KAAK,QACLgB,YAAY,QACZpB,MAAO1B,EAAWK,MAClB0C,SAAUzB,IAEZ,2BAAOuB,QAAQ,YAAf,YAGA,2BACEjB,KAAK,WACLE,KAAK,WACLgB,YAAY,WACZpB,MAAOZ,EAAYR,SACnByC,SAAUzB,IAEZ,2BAAOuB,QAAQ,eAAf,YAGA,4BAAQf,KAAK,cAAcmB,SAAUrC,EAAesC,QAASf,GAA7D,aAGJ,kBAAC,IAAD,CAAMgB,GAAG,UAAT,yCCrIGC,EAAeC,IAAMC,cAAc,ICSjC,SAASC,EAAM7C,GAAQ,IAAD,EACD8C,qBAAWJ,GAArCK,EAD2B,EAC3BA,SAAUC,EADiB,EACjBA,YADiB,EAEX/C,mBAAS,CAC/BR,SAAQ,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAUtD,SACpBG,SAAQ,OAAEmD,QAAF,IAAEA,OAAF,EAAEA,EAAUnD,WAJa,mBAE5BqD,EAF4B,KAEtBC,EAFsB,KAO7BC,EAAgB,SAAAtC,GACpBqC,EAAQ,2BACHD,GADE,kBAEJpC,EAAEI,OAAOG,KAAOP,EAAEI,OAAOD,UAuB9B,OAEM,yBAAKiB,UAAU,OACb,6CACA,0BAAMA,UAAU,MAAMC,SAxBb,SAAArB,GACfA,EAAEa,iBACF7C,IACGgD,KAAK,yDAA0DoB,GAC/DvC,MAAK,SAAAoB,GACJH,QAAQC,IAAIE,EAAIE,MAChBgB,EAAYlB,EAAIE,SAGjBV,OAAM,SAAAC,GACDA,EAAI6B,SACNzB,QAAQ0B,MAAM,qBAAsB9B,EAAI6B,SAASpB,MAEjDL,QAAQ0B,MAAM,qBAAsB9B,QAYlC,2BAAOY,QAAQ,YAAf,aAGA,2BAEEjB,KAAK,WACLE,KAAK,WACLgB,YAAY,WACZpB,MAAOiC,EAAKxD,SACZ4C,SAAUc,IAEZ,2BAAOhB,QAAQ,YAAf,YAGA,2BACEjB,KAAK,WACLE,KAAK,WACLgB,YAAY,WACZpB,MAAOiC,EAAKrD,SACZyC,SAAUc,IAEZ,2BAAOhB,QAAQ,SAAf,SAGC,4BAAQK,QAhCF,cAgCN,UAGH,yDACwB,kBAAC,IAAD,CAASC,GAAG,KAAZ,aC5EnB,SAASa,EAAQtD,GAC9B,OACE,oCAEJ,yBAAKiC,UAAU,cACT,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMQ,GAAG,KAAT,SAIA,yBAAKR,UAAU,eACb,kBAAC,IAAD,CAAMQ,GAAG,UAAT,UAIF,yBAAKR,UAAU,eACb,kBAAC,IAAD,CAAMQ,GAAG,UAAT,WAdN,IAoBA,yBAAKR,UAAU,cACb,+CCSSsB,MAzBf,WACE,OACE,kBAAC,IAAD,KACE,kBAACD,EAAD,MAEA,yBAAKrB,UAAU,OAEb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,IAAIC,UAAW3D,IACjC,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,SAASC,UAAWb,Q,YCP1Bc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEdnD,OAAM,SAAA+B,GACL1B,QAAQ0B,MAAMA,EAAMqB,c","file":"static/js/main.f07cc50c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n  const token = localStorage.getItem('token');\n\n  return axios.create({\n    baseURL: 'https://bw-one-line-a-day.herokuapp.com/api/',\n    headers: {\n      Authorization: token\n    }\n  });\n};","import React, { useState, useEffect } from 'react'\nimport { axiosWithAuth } from './axiosWithAuth'\nimport {  Link  } from 'react-router-dom';\n\n// import styled from 'styled-components'\n\n//import InactiveButton from '../Assets/SignUpInactiveButton'\n// import WelcomeLogIn from '../Components/WelcomeLogIn.js';\nimport * as yup from \"yup\";\n\nconst formSchema = yup.object().shape({\n  username: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n  terms: yup.boolean().oneOf([true], \"Please agree to terms of use\")\n\n});\n\n\n\nconst SignUp = (props) => {\n\nconst [ButtonDisabled,setButtonDisabled] = useState();\n\nconst [credentials, setCredentials] = useState({\n  username: '',\n  password: '',\n  email:''\n})\n\n\n\nconst [errorState, setErrorState] = useState({\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  terms: \"\"\n});\n\nconst validate = event => {\n    let value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n    yup\n      .reach(formSchema, event.target.name)\n      .validate(value)\n      .then(valid => {\n        setErrorState({\n          ...errorState,\n          [event.target.name]: \"\"\n        });\n      })\n      .catch(err => {\n        setErrorState({\n          ...errorState,\n          [event.target.name]: err.errors[0]\n        });\n      });\n  };\n\n\n\n  useEffect(() => {\n    formSchema.isValid(credentials).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [credentials]);\n  \n  const handleChange = e => {\n    e.persist();\n    validate(e);\n    setCredentials({\n      ...credentials, \n      [e.target.name]: e.target.value\n      })}\n\n  const signUp = e => {\n    e.preventDefault()\n    console.log(credentials)\n    axiosWithAuth()\n      .post('/auth/register', credentials)\n      .then(res => {\n        localStorage.setItem('token', res.data.token)\n        // props.history.push('/home')\n        console.log(res.data)\n      })\n      .catch(err => console.log(err))}\n\n  return (\n    <>\n    \n      {/* <Logo src={LogoImg} /> */}\n      Water My Plants\n    \n \n        <div className=\"App\">\n          <h1>Welcome!</h1>\n          <p>Register your account below</p>\n              <form className=\"App\" onSubmit={signUp}>\n                <label htmlFor=\"username\">\n                  USER NAME\n                </label>\n              <input\n                type='text'\n                name='username'\n                placeholder='NAME'\n                value={credentials.username}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"username\">\n                  E-MAIL\n                  {errorState.email.length > 0 ? (\n          <p className=\"error App-logo\">{errorState.email}</p>\n        ) : null}\n                </label>\n              <input\n                type='email'\n                name='email'\n                placeholder='EMAIL'\n                value={formSchema.email}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                type='password'\n                name='password'\n                placeholder='PASSWORD'\n                value={credentials.password}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"registerbtn\">\n                REGISTER\n              </label>\n              <button name=\"registerbtn\" disabled={ButtonDisabled}onClick={signUp}>Register</button>\n            </form>\n                  \n          <Link to='/login'>Already have an account? - Sign In</Link>\n       \n        </div>\n\n    </>\n  );\n};\n\nexport default SignUp;\n","\nimport React, { useState } from 'react';\n\n\nexport const StoreContext = React.createContext({});\n\nexport const ContextProvider = props => {\n  // Password should be removed when going live, this is just for ease of development\n  const [userInfo, setState] = useState({\n    id: null,\n    username: '',\n    password: ''\n  });\n\n  const setUserInfo = data => {\n    const { token, user } = data;\n    const { id, username } = user;\n    localStorage.setItem('token', token);\n    setState({ id, username });\n  };\n  \n  const context = { userInfo, setUserInfo };\n\n\n  return (\n    <StoreContext.Provider value={context}>\n      {props.children}\n    </StoreContext.Provider>\n  );\n};\n\n","import React, { useState, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { StoreContext } from '../contextAPI/Context.js';\n\n\n\n\n\nimport { axiosWithAuth } from '../Auth/axiosWithAuth.js';\n// import Styled from 'styled-components';\n// const Divv = Styled.div`\n//   background-color:blue;\n// `;\nexport default function Login(props) {\n  const { userInfo, setUserInfo } = useContext(StoreContext);\n  const [form, setForm] = useState({\n    username: userInfo?.username,\n    password: userInfo?.password\n  });\n\n  const handleChanges = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    axiosWithAuth()\n      .post('https://watertheplants.herokuapp.com/api/auth/register', form)\n      .then(res => {\n        console.log(res.data);\n        setUserInfo(res.data);\n//setTimeout(() => props.history.push('/Home'), 1000);\n      })\n      .catch(err => {\n        if (err.response) {\n          console.error('Error logging in: ', err.response.data);\n        } else {\n          console.error('Error logging in: ', err);\n        }\n      });\n  };\nconst PlantsList = () =>{\n\n}\n  return (\n  \n        <div className=\"App\">\n          <h1>Welcome back!</h1>\n          <form className=\"App\" onSubmit={onSubmit}>\n            <label htmlFor=\"username\">\n              USER NAME\n            </label>\n            <input\n              \n              type=\"username\"\n              name=\"username\"\n              placeholder=\"USERNAME\"\n              value={form.username}\n              onChange={handleChanges}\n            />\n            <label htmlFor=\"password\">\n              PASSWORD\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"PASSWORD\"\n              value={form.password}\n              onChange={handleChanges}\n            />\n            <label htmlFor=\"login\">\n              LOGIN\n            </label>\n             <button onClick={PlantsList}>Login</button>\n            \n          </form>\n          <button>\n            DON'T HAVE AN ACCOUNT?<NavLink to=\"/\">SIGN UP</NavLink>\n          </button>\n        </div>\n      \n  \n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Heading(props) {\n  return (\n    <>\n\n<div className=\"saved-list\">\n      <div className=\"home-button\">\n        <Link to=\"/\" >\n        Home\n        </Link>\n      </div>\n        <div className=\"home-button\">\n          <Link to=\"/login\" >\n          Login\n          </Link>\n        </div>\n        <div className=\"home-button\">\n          <Link to=\"/about\" >\n          About\n          </Link>\n        </div>\n  </div>\n  ,\n    <div className=\"saved-list\">\n      <h3>Saved Plants:</h3>\n      {/* {props.list.map(plant => (\n        <span className=\"saved-movie\">{plant.title}</span>\n      ))} */}\n      \n    </div>\n\n\n    </>\n  );\n}\n","import React from 'react';\n\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import PrivateRoute from './Auth/PrivateRoute';\n\nimport SignUp from './Auth/SignUp';\nimport Login from './components/Login'\nimport Heading from './Heading';\n\nfunction App() {\n  return (\n    <Router>\n      <Heading />\n      {/* <StyledApp> */}\n      <div className=\"App\">\n\n        <Switch>\n        <Route exact path=\"/\" component={SignUp} />\n        <Route exact path=\"/login\" component={Login} />\n        {/* <PrivateRoute path=\"/home\" component={HomePage} />\n        <PrivateRoute path=\"/NewEntry\" component={NewEntryPage} />\n        <PrivateRoute path=\"/MyEntries\" component={EntryArchive} />\n        <PrivateRoute path=\"/edit/:id\" component={Edit} />  */}\n        </Switch>\n\n\n      </div>\n\n      {/* </StyledApp> */}\n    </Router>\n  );\n}\n\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}