{"version":3,"sources":["components/PlantsList.js","components/About.js","Auth/axiosWithAuth.js","Auth/SignUp.js","contextAPI/Context.js","components/Login.js","Heading.js","App.js","serviceWorker.js","index.js"],"names":["PlantsList","uname","useParams","username","id","className","axiosWithAuth","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","formSchema","yup","shape","required","email","password","phoneNumber","matches","terms","oneOf","SignUp","props","useState","ButtonDisabled","setButtonDisabled","credentials","setCredentials","errorState","setErrorState","usr","setUsr","useEffect","isValid","then","valid","handleChange","e","persist","event","value","target","type","checked","name","validate","catch","err","errors","signUp","preventDefault","console","log","post","res","setItem","data","onSubmit","htmlFor","placeholder","onChange","length","disabled","onClick","to","StoreContext","React","createContext","Login","history","useHistory","useContext","userInfo","setUserInfo","form","setForm","handleChanges","response","error","push","Heading","App","exact","path","component","About","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.47473d9e.chunk.js","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\n\n\nconst PlantsList = ( ) =>{\n\n    const { username } = useParams();\n\nconst uname = username;\n    return (\n        <div>\n            <p>\n                Hello {uname }\n            </p>\n        </div>\n    );\n}\n\nexport default PlantsList ","import React from 'react';\n\n\n\nconst PlantsList = ( ) =>{\n\n    \n    return (\n\n        <div id=\"About\" className=\"App\">\n            <h1>About Watering the Plants</h1>\n            <br />\n            <p>\n                <i>The App that never Forgets...</i>\n            </p>\n            <p>\n                Is an awesome app which will remind you to water your plants and show tips on how to do so. This app has saved \n                many plant lives and is the app prides itself on its acheivments. \n            </p>\n            <h2>\n                Many Great Features\n            </h2>\n            <ul>\n                <li>\n                    Timer Feature always reminds you so you never forget to water those plants\n                </li>\n                <li>\n                    Its versitility allows you to schedule the timer function not only for watering plants but for any events that may be going on. Just use the calendar for this and the timer feature will remind you of that event when it comes.\n                </li>\n                <li>\n                    Just remember this is the app that never forgets\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default PlantsList ","import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n  const token = localStorage.getItem('token');\n\n  return axios.create({\n    baseURL: 'https://bw-one-line-a-day.herokuapp.com/api/',\n    headers: {\n      Authorization: token\n    }\n  });\n};","import React, { useState, useEffect } from 'react'\nimport { axiosWithAuth } from './axiosWithAuth'\nimport {  Link  } from 'react-router-dom';\n\n// import styled from 'styled-components'\n\n//import InactiveButton from '../Assets/SignUpInactiveButton'\n// import WelcomeLogIn from '../Components/WelcomeLogIn.js';\nimport * as yup from \"yup\";\n\n\n// const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n\n// phone_number: Yup.string()\n//   .required(\"required\")\n//   .matches(phoneRegExp, 'Phone number is not valid')\n//   .min(10, \"to short\")\n//   .max(10, \"to long\"),\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst formSchema = yup.object().shape({\n  username: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n  phoneNumber:yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n  terms: yup.boolean().oneOf([true], \"Please agree to terms of use\")\n\n});\n\n\n\nconst SignUp = (props) => {\n\nconst [ButtonDisabled,setButtonDisabled] = useState();\n\nconst [credentials, setCredentials] = useState({\n  username: '',\n  password: '',\n  email:'',\n  phoneNumber:''\n})\n\n\n\nconst [errorState, setErrorState] = useState({\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  phoneNumber: \"\",\n  terms: \"\"\n});\n\n\nconst [usr,setUsr ] = useState({\n  username:\"\",\n  email: \"\",\n  phoneNumber: \"\"\n});\n\n\n// yup.addMethod(yup.string, \"phone\", function(messageError = 'Phone number is not valid') {\n//   const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n//   return this.test('phone', messageError, value => {\n//     if (value && value.length > 0) {\n//       return phoneRegExp.test(value)\n//     }\n//     return true\n//   })\n// })\nconst validate = event => {\n\n\n\n\n\n    let value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n    yup\n      .reach(formSchema, event.target.name)\n      .validate(value)\n      .then(valid => {\n        setErrorState({\n          ...errorState,\n          [event.target.name]: \"\"\n        });\n      })\n      .catch(err => {\n        setErrorState({\n          ...errorState,\n          [event.target.name]: err.errors[0]\n        });\n      });\n  };\n\n\n\n  useEffect(() => {\n    formSchema.isValid(credentials).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [credentials]);\n  \n  const handleChange = e => {\n    e.persist();\n    validate(e);\n    setCredentials({\n      ...credentials, \n      [e.target.name]: e.target.value\n      })\n      setUsr({\n          ...usr,\n          [e.target.name]: e.target.value\n        })\n    \n    }\n\n  const signUp = e => {\n    e.preventDefault()\n    console.log(credentials)\n    axiosWithAuth()\n      .post('/auth/register', usr)\n      .then(res => {\n        localStorage.setItem('token', res.data.token)\n        // props.history.push('/home')\n        console.log(res.data)\n      })\n      .catch(err => console.log(err))}\n\n  return (\n    <>\n    \n      {/* <Logo src={LogoImg} /> */}\n      \n    \n \n        <div className=\"App Form\">\n          <h1>Water My Plants</h1>\n          <h2 className=\"pale\">Welcome!</h2>\n          <p className=\"pale\">Register your account below</p>\n              <form className=\"App\" onSubmit={signUp}>\n                <label htmlFor=\"username\">\n                  USER NAME\n                </label>\n              <input\n                type='text'\n                name='username'\n                placeholder='NAME'\n                value={credentials.username}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"username\">\n                  E-MAIL\n                  {errorState.email.length > 0 ? (\n          <p className=\"error App-logo\">{errorState.email}</p>\n        ) : null}\n                </label>\n              <input\n                type='email'\n                name='email'\n                placeholder='EMAIL'\n                value={formSchema.email}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                type='password'\n                name='password'\n                placeholder='PASSWORD'\n                value={credentials.password}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"phoneNumber\">\n                PHONE-NUMBER\n                {errorState.phoneNumber.length >= 11 ? (\n          <p className=\"error App-logo\">{errorState.phoneNumber}</p>\n        ) : null}\n              </label>\n              <input\n                type='text'\n                name='phoneNumber'\n                placeholder='PHONE NUMBER'\n                value={formSchema.phoneNumber}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"registerbtn\">\n                REGISTER\n              </label>\n              <button name=\"registerbtn\" disabled={ButtonDisabled}onClick={signUp}>Register</button>\n            </form>\n                  \n          <Link to='/login'>Already have an account? - Sign In</Link>\n       \n        </div>\n\n    </>\n  );\n};\n\nexport default SignUp;\n","\nimport React, { useState } from 'react';\n\n\nexport const StoreContext = React.createContext({});\n\nexport const ContextProvider = props => {\n  // Password should be removed when going live, this is just for ease of development\n  const [userInfo, setState] = useState({\n    id: null,\n    username: '',\n    password: ''\n  });\n\n  const setUserInfo = data => {\n    const { token, user } = data;\n    const { id, username } = user;\n    localStorage.setItem('token', token);\n    setState({ id, username });\n  };\n  \n  const context = { userInfo, setUserInfo };\n\n\n  return (\n    <StoreContext.Provider value={context}>\n      {props.children}\n    </StoreContext.Provider>\n  );\n};\n\n","import React, { useState, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { StoreContext } from '../contextAPI/Context.js';\n\n// import { matchPath } from \"react-router\";\n\n\n\n\nimport { axiosWithAuth } from '../Auth/axiosWithAuth.js';\n// import Styled from 'styled-components';\n// const Divv = Styled.div`\n//   background-color:blue;\n// `;\nexport default function Login(props) {\n  const history = useHistory();\n  const { userInfo, setUserInfo } = useContext(StoreContext);\n  const [form, setForm] = useState({\n    username: userInfo?.username,\n    password: userInfo?.password\n  });\n\n  const handleChanges = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    axiosWithAuth()\n      .post('https://watertheplants.herokuapp.com/api/auth/register', form)\n      .then(res => {\n        console.log(res.data);\n        setUserInfo(res.data);\n//setTimeout(() => props.history.push('/Home'), 1000);\n      })\n      .catch(err => {\n        if (err.response) {\n          console.error('Error logging in: ', err.response.data);\n        } else {\n          console.error('Error logging in: ', err);\n        }\n      });\n  };\nconst PlantsList = () =>{\n  // const match = matchPath(`/auth/register/${form.username}`, {\n  //   path: \"/auth/register/:username\",\n  //   exact: false,\n  //   strict: true\n  // });\n  \n  \n  \n    history.push(`/auth/register/${form.username}`);\n    // history.replace();\n}\n  return (\n  \n        <div className=\"App Form\">\n          <h1>Welcome back!</h1>\n          <form className=\"App\" onSubmit={onSubmit}>\n            <label htmlFor=\"username\">\n              USER NAME\n            </label>\n            <input\n              \n              type=\"username\"\n              name=\"username\"\n              placeholder=\"USERNAME\"\n              value={form.username}\n              onChange={handleChanges}\n            />\n            <label htmlFor=\"password\">\n              PASSWORD\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"PASSWORD\"\n              value={form.password}\n              onChange={handleChanges}\n            />\n            <label htmlFor=\"login\">\n              LOGIN\n            </label>\n             <button onClick={PlantsList}>Login</button>\n            \n          </form>\n          <button>\n            DON'T HAVE AN ACCOUNT?<NavLink to=\"/\">SIGN UP</NavLink>\n          </button>\n        </div>\n      \n  \n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Heading(props) {\n  return (\n    <>\n\n<div className=\"saved-list\">\n      <div className=\"home-button\">\n        <Link to=\"/\" >\n        Home\n        </Link>\n      </div>\n        <div className=\"home-button\">\n          <Link to=\"/login\" >\n          Login\n          </Link>\n        </div>\n        <div className=\"home-button\">\n          <Link to=\"/about\" >\n          About\n          </Link>\n        </div>\n  </div>\n  ,\n    <div className=\"saved-list\">\n      <h3>Saved Plants:</h3>\n      {/* {props.list.map(plant => (\n        <span className=\"saved-movie\">{plant.title}</span>\n      ))} */}\n      \n    </div>\n\n\n    </>\n  );\n}\n","import React from 'react';\n\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import PrivateRoute from './Auth/PrivateRoute';\nimport PlantsList from './components/PlantsList';\nimport About from './components/About';\nimport SignUp from './Auth/SignUp';\nimport Login from './components/Login'\nimport Heading from './Heading';\n\nfunction App() {\n  return (\n    <Router>\n      <Heading />\n      {/* <StyledApp> */}\n      <div className=\"App\">\n\n        <Switch>\n        <Route exact path=\"/\" component={SignUp} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route  path=\"/auth/register/:username\" component={PlantsList} />\n        {/* <PrivateRoute path=\"/home\" component={HomePage} />\n        <PrivateRoute path=\"/NewEntry\" component={NewEntryPage} />\n        <PrivateRoute path=\"/MyEntries\" component={EntryArchive} />\n        <PrivateRoute path=\"/edit/:id\" component={Edit} />  */}\n\n        <Route path=\"/about\" component={About} />\n        </Switch>\n\n\n      </div>\n\n      {/* </StyledApp> */}\n    </Router>\n  );\n}\n\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}